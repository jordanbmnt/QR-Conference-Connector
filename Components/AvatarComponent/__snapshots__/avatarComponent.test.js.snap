// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AvatarComponent should render avatar component correctly 1`] = `
<View
  data-style=""
  dataSet={
    {
      "style": "",
    }
  }
  space="2xl"
  style={
    [
      undefined,
      {},
      {
        "flexDirection": "column",
      },
      {},
      {
        "gap": 24,
      },
      undefined,
    ]
  }
>
  <View
    data-style=""
    dataSet={
      {
        "style": "",
      }
    }
    space="md"
    style={
      [
        undefined,
        {},
        {
          "flexDirection": "row",
        },
        {},
        {
          "gap": 12,
        },
        undefined,
      ]
    }
  >
    <View
      data-style=""
      dataSet={
        {
          "style": "",
        }
      }
      size="md"
      style={
        [
          undefined,
          {},
          {
            "alignItems": "center",
            "backgroundColor": "#005DB4",
            "borderRadius": 9999,
            "justifyContent": "center",
            "position": "relative",
          },
          {},
          {
            "height": 48,
            "width": 48,
          },
          undefined,
        ]
      }
    >
      <Text
        data-style=""
        dataSet={
          {
            "style": "",
          }
        }
        size="md"
        style={
          [
            undefined,
            {},
            {
              "color": "#525252",
              "fontFamily": undefined,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
            },
            {},
            {
              "fontSize": 16,
              "lineHeight": 22,
            },
            undefined,
            {},
            {
              "color": "#FCFCFC",
              "fontWeight": "600",
              "overflow": "hidden",
              "textTransform": "uppercase",
            },
            {},
            {},
            undefined,
          ]
        }
      >
        J
      </Text>
      <Image
        data-style=""
        dataSet={
          {
            "style": "",
          }
        }
        onError={[Function]}
        source={
          {
            "uri": "profilePic",
          }
        }
        style={
          [
            undefined,
            {},
            {
              "borderRadius": 9999,
              "height": "100%",
              "position": "absolute",
              "width": "100%",
            },
            {},
            undefined,
          ]
        }
      />
    </View>
    <View
      data-style=""
      dataSet={
        {
          "style": "",
        }
      }
      style={
        [
          undefined,
          {},
          {
            "flexDirection": "column",
          },
          {},
          undefined,
        ]
      }
    >
      <Text
        accessibilityRole="header"
        data-style=""
        dataSet={
          {
            "style": "",
          }
        }
        style={
          {
            "color": "white",
            "fontFamily": undefined,
            "fontSize": 18,
            "fontWeight": "700",
            "letterSpacing": -0.2,
            "lineHeight": 24,
            "marginVertical": 0,
          }
        }
      >
        John
      </Text>
      <View
        data-style=""
        dataSet={
          {
            "style": "",
          }
        }
        style={
          [
            undefined,
            {},
            {
              "flexDirection": "row",
            },
            {},
            {
              "textJustify": "center",
            },
            undefined,
          ]
        }
        sx={
          {
            "textJustify": "center",
          }
        }
      >
        <Text
          accessibilityRole="header"
          data-style=""
          dataSet={
            {
              "style": "",
            }
          }
          style={
            {
              "color": "grey",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontWeight": "700",
              "letterSpacing": -0.2,
              "lineHeight": 18,
              "marginVertical": 0,
            }
          }
        >
          Alive
        </Text>
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight="16"
          bbWidth="16"
          data-style=""
          dataSet={
            {
              "style": "",
            }
          }
          fill="none"
          focusable={false}
          height={16}
          meetOrSlice={0}
          minX={0}
          minY={0}
          role="image"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          style={
            [
              {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              [
                undefined,
                {},
                {
                  "color": "#404040",
                },
                {},
                {
                  "height": 16,
                  "width": 16,
                },
                undefined,
                {},
                {
                  "color": "#404040",
                },
                {},
                {
                  "color": "orange",
                },
                undefined,
              ],
              {
                "flex": 0,
                "height": 16,
                "width": 16,
              },
            ]
          }
          tintColor="orange"
          vbHeight={24}
          vbWidth={24}
          width={16}
          xmlns="http://www.w3.org/2000/svg"
        >
          <RNSVGGroup
            fill={null}
            propList={
              [
                "fill",
                "stroke",
                "strokeWidth",
                "strokeLinecap",
                "strokeLinejoin",
              ]
            }
            stroke={
              {
                "type": 2,
              }
            }
            strokeLinecap={1}
            strokeLinejoin={1}
            strokeWidth="2"
          >
            <RNSVGCircle
              cx="12.1"
              cy="12.1"
              fill={null}
              propList={
                [
                  "fill",
                  "stroke",
                  "strokeWidth",
                  "strokeLinecap",
                  "strokeLinejoin",
                ]
              }
              r="1"
              stroke={
                {
                  "type": 2,
                }
              }
              strokeLinecap={1}
              strokeLinejoin={1}
              strokeWidth="2"
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
  </View>
</View>
`;
